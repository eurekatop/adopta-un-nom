import type { Quiz } from '../models/Quiz';

export function scoreQuizDifficulty(quiz: Quiz): number {
  const lengthScore = quiz.question.length / 100;
  const optionScore = quiz.options.length >= 5 ? 1.5 : 1;

  // Maybe check for long/unusual words?
  const rareWordBonus = quiz.options.some(opt => opt.length > 12) ? 1.2 : 1;

  return +(lengthScore * optionScore * rareWordBonus).toFixed(2);
}

/// TODO



/**
 * 
        1. Freq√º√®ncia de la paraula correcta (f)
        Si la paraula √©s poc freq√ºent, probablement √©s m√©s dif√≠cil.

        Fes servir un corpus amb freq√º√®ncies (pot ser Wiktionary, SUBTLEX, Wikipedia, o el teu propi).

        Escala la freq√º√®ncia entre 0 i 1 (on 0 √©s molt comuna, 1 √©s molt rara).
 */
function freqScore(wordFreq) {
  // Assume wordFreq ‚àà [0, MAX_FREQ]
  const maxFreq = 100000;
  return 1 - Math.min(wordFreq / maxFreq, 1);
}

/*
2. Complexitat l√®xica de la definici√≥ (c)
Amb spaCy pots calcular el nombre de paraules llargues, subordinacions o un score de llegibilitat (si vols ho podem fer amb textstat).
*/

function complexityScore(definition) {
  const nWords = definition.split(" ").length;
  const longWords = definition.split(" ").filter(w => w.length >= 8).length;
  return Math.min(longWords / nWords, 1);
}


/*
3. Similitud mitjana amb distractors (s)
Com m√©s similars siguin les paraules incorrectes a la correcta, m√©s dif√≠cil √©s.

Calcula la mitjana de similitud entre cada distractor i la resposta correcta.

Escala de 0 (gens similars, f√†cil) a 1 (molt similars, dif√≠cil).
*/

function similarityScore(correct, distractors) {
  const sims = distractors.map(d => getSimilarity(correct, d)); // [0,1]
  return sims.reduce((a, b) => a + b, 0) / distractors.length;
}


/*
4. F√≥rmula total de dificultat
*/
function estimateDifficulty(wordFreq, definition, correct, distractors) {
  const f = freqScore(wordFreq);
  const c = complexityScore(definition);
  const s = similarityScore(correct, distractors);
  return (0.4 * f + 0.3 * c + 0.3 * s); // Resultat entre 0 (f√†cil) i 1 (dif√≠cil)
}

/*
üß™ Exemple aplicat (pseudo):
*/

estimateDifficulty(
  wordFreq = 123, // endosar
  definition = "En el juego del tresillo, lograr que haga una segunda baza quien no lleva la contra.",
  correct = "endosar",
  distractors = ["cardio", "resetearse", "enceramiento"]
)

/*
Amb spacy pots fer servir:

import spacy
nlp = spacy.load("es_core_news_md")

def get_similarity(a, b):
    return nlp(a).similarity(nlp(b))

*/



// export function estimateDifficulty(question) {
//   const definitionComplexity = measureDefinitionReadingLevel(question.definition);
//   const targetWordFreq = getWordFrequency(question.correctAnswer);
//   const distractorSimilarity = averageSemanticDistance(question.distractors, question.correctAnswer);
// 
//   // Formula b√†sica (exemple):
//   return 0.5 * definitionComplexity + 0.3 * (1 - targetWordFreq) + 0.2 * distractorSimilarity;
// }
// 
// 
// 

/*
üß† 1. Mesura emp√≠rica basada en jugadors (el m√©s fiable)
Un cop tens dades d'√∫s reals, pots fer servir:

Taxa d'encerts: si nom√©s un 5% encerta la resposta, √©s dif√≠cil. Si un 80%, √©s f√†cil.

Temps de resposta: preguntes que tarden m√©s a respondre solen ser m√©s dif√≠cils.

üîÅ Aix√≤ et permetria fer autotuning de la dificultat basada en estad√≠stiques reals.

üìö 2. Estimaci√≥ ling√º√≠stica de dificultat (a priori)
Si encara no tens prou jugadors o vols fer-ho abans de tenir dades:

a) Longitud o raresa de la paraula
Pots usar diccionaris com el SUBTLEX-ESP o freq√º√®ncies del Wiktionary per saber si una paraula √©s comuna o no.

Tamb√© podries fer servir FastText o Word2Vec i mirar com n‚Äô√©s de similar sem√†nticament la definici√≥ amb la paraula correcta (si tenen poca afinitat, pot ser m√©s dif√≠cil).

b) Complexitat l√®xica de la definici√≥
Mides com Flesch Reading Ease o b√© mirar el nombre de paraules llargues, subordinades, etc.

Com m√©s t√®cnica sigui una definici√≥, probablement m√©s dif√≠cil.

c) Distractors (les altres opcions)
Si les opcions incorrectes s√≥n molt properes sem√†nticament o morfol√≤gicament (ex: encerar vs encerament), m√©s dif√≠cil.

Si una opci√≥ √©s molt ‚Äúlol‚Äù (afenfosmofobia), pot facilitar la tria per eliminaci√≥.

üß™ 3. Machine learning b√†sic
Amb prou preguntes etiquetades (f√†cil, mitjana, dif√≠cil) o amb dades de jugadors, pots entrenar un model de regressi√≥ o classificaci√≥ per predir dificultat segons:

Longitud de la paraula

FrequÃà√®ncia d‚Äô√∫s

Semblan√ßa sem√†ntica entre definici√≥ i respostes

Nivell de lectura de la definici√≥

Similaritat entre distractors i resposta correcta

*/



///////// FREQUENCIES /////////
/*

que es aixo ?
Pots usar diccionaris com el SUBTLEX-ESP o freq√º√®ncies del Wiktionary per saber si una paraula √©s comuna o no.


ChatGPT ha dit:
Bona! T‚Äôexplico:

üìä SUBTLEX-ESP
SUBTLEX-ESP √©s un diccionari de freq√º√®ncies de paraules en espanyol basat en subt√≠tols de pel¬∑l√≠cules i s√®ries. Est√† pensat per reflectir el llenguatge quotidi√†, i per aix√≤ √©s molt usat en psicologia del llenguatge i educaci√≥.

Per qu√® √©s √∫til?

Reflecteix com de ‚Äúcomuna‚Äù √©s una paraula en l‚Äô√∫s real.

Inclou valors com:

FREQcount: nombre d‚Äôaparicions.

Lg10WF: log10 de la freq√º√®ncia (m√©s estable estad√≠sticament).

CD: diseminaci√≥ contextual (com d‚Äôampli √©s el seu √∫s en contextos diferents).

üîó Acc√©s gratu√Øt al SUBTLEX-ESP (pots baixar-lo en .csv).

üìñ Freq√º√®ncies del Wiktionary
El Wiktionary cont√© una secci√≥ anomenada Frequency o Usage, depenent de l‚Äôidioma, on a vegades s‚Äôinclouen etiquetes com:

Top 5000 Spanish words

High-frequency word

Obsolete

Tamb√© hi ha projectes derivats com:

https://en.wiktionary.org/wiki/Wiktionary:Frequency_lists

O dumps que fan estad√≠stiques sobre les paraules m√©s usades segons Wiktionary, Wikipedia, etc.

Menys fiable que SUBTLEX per√≤ pot ser √∫til si ja tens un corpus del Wiktionary o l‚Äôest√†s usant com a font principal.

üß∞ Per al teu cas:
Et recomano descarregar SUBTLEX-ESP i convertir-lo en un Map<string, number> on string √©s la paraula i number la seva freq√º√®ncia.

Quan prepares les preguntes, busques si la paraula hi √©s i li assignes una dificultat segons com de baixa √©s la seva freq.

Vols que et passi un script per convertir el CSV de SUBTLEX en JSON usables des del teu joc?

*/